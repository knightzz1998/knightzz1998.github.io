const e=JSON.parse('{"key":"v-630d80fc","path":"/java/interview/JavaBase02.html","title":"Java基础面试题(中)","lang":"zh-CN","frontmatter":{"title":"Java基础面试题(中)","date":"2023-02-24T00:00:00.000Z","icon":"java","banner":"https://haloos.oss-cn-beijing.aliyuncs.com/typero/image-20230224202059698.png","category":["Java基础","面试题"],"description":"面向对象和面向过程的区别 两者的主要区别在于解决问题的方式不同 面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。 面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。 另外，面向对象开发的程序一般更易维护、易复用、易扩展。 创建一个对象用什么运算符?对象实体与对象引用有何不同? new 运算符，new 创建对象实例（对象实例在堆内存中），对象引用指向对象实例（对象引用存放在栈内存中）。 一个对象引用可以指向 0 个或 1 个对象（一根绳子可以不系气球，也可以系一个气球）;一个对象可以有 n 个引用指向它（可以用 n 条绳子系住一个气球）。","head":[["meta",{"property":"og:url","content":"https://knightzz1998.github.io/java/interview/JavaBase02.html"}],["meta",{"property":"og:site_name","content":"十里平湖霜满天"}],["meta",{"property":"og:title","content":"Java基础面试题(中)"}],["meta",{"property":"og:description","content":"面向对象和面向过程的区别 两者的主要区别在于解决问题的方式不同 面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。 面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。 另外，面向对象开发的程序一般更易维护、易复用、易扩展。 创建一个对象用什么运算符?对象实体与对象引用有何不同? new 运算符，new 创建对象实例（对象实例在堆内存中），对象引用指向对象实例（对象引用存放在栈内存中）。 一个对象引用可以指向 0 个或 1 个对象（一根绳子可以不系气球，也可以系一个气球）;一个对象可以有 n 个引用指向它（可以用 n 条绳子系住一个气球）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://haloos.oss-cn-beijing.aliyuncs.com/typero/image-20230224202059698.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-06T06:15:49.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Java基础面试题(中)"}],["meta",{"property":"article:published_time","content":"2023-02-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-06T06:15:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java基础面试题(中)\\",\\"image\\":[\\"https://haloos.oss-cn-beijing.aliyuncs.com/typero/image-20230224202059698.png\\"],\\"datePublished\\":\\"2023-02-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-06T06:15:49.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"面向对象和面向过程的区别","slug":"面向对象和面向过程的区别","link":"#面向对象和面向过程的区别","children":[]},{"level":3,"title":"创建一个对象用什么运算符?对象实体与对象引用有何不同?","slug":"创建一个对象用什么运算符-对象实体与对象引用有何不同","link":"#创建一个对象用什么运算符-对象实体与对象引用有何不同","children":[]},{"level":3,"title":"对象的相等和引用相等的区别","slug":"对象的相等和引用相等的区别","link":"#对象的相等和引用相等的区别","children":[]},{"level":3,"title":"类的构造方法的作用是什么?","slug":"类的构造方法的作用是什么","link":"#类的构造方法的作用是什么","children":[]},{"level":3,"title":"对象的初始化工作主要做什么?","slug":"对象的初始化工作主要做什么","link":"#对象的初始化工作主要做什么","children":[]},{"level":3,"title":"如果一个类没有声明构造方法，该程序能正确执行吗?","slug":"如果一个类没有声明构造方法-该程序能正确执行吗","link":"#如果一个类没有声明构造方法-该程序能正确执行吗","children":[]},{"level":3,"title":"构造方法有哪些特点？是否可被 override?","slug":"构造方法有哪些特点-是否可被-override","link":"#构造方法有哪些特点-是否可被-override","children":[]},{"level":3,"title":"解释下封装的概念","slug":"解释下封装的概念","link":"#解释下封装的概念","children":[]},{"level":3,"title":"Java中为什么要有封装这个概念, 不封装行不行?","slug":"java中为什么要有封装这个概念-不封装行不行","link":"#java中为什么要有封装这个概念-不封装行不行","children":[]},{"level":3,"title":"解释下继承的概念","slug":"解释下继承的概念","link":"#解释下继承的概念","children":[]},{"level":3,"title":"解释下多态的概念","slug":"解释下多态的概念","link":"#解释下多态的概念","children":[]},{"level":3,"title":"多态在JVM层面是如何实现的","slug":"多态在jvm层面是如何实现的","link":"#多态在jvm层面是如何实现的","children":[]},{"level":3,"title":"接口和抽象类有什么共同点和区别？","slug":"接口和抽象类有什么共同点和区别","link":"#接口和抽象类有什么共同点和区别","children":[]},{"level":3,"title":"深拷贝和浅拷贝区别了解吗？什么是引用拷贝","slug":"深拷贝和浅拷贝区别了解吗-什么是引用拷贝","link":"#深拷贝和浅拷贝区别了解吗-什么是引用拷贝","children":[]},{"level":3,"title":"Object 类相关","slug":"object-类相关","link":"#object-类相关","children":[]},{"level":3,"title":"== 和 equals() 的区别","slug":"和-equals-的区别","link":"#和-equals-的区别","children":[]},{"level":3,"title":"hashCode() 有什么用？","slug":"hashcode-有什么用","link":"#hashcode-有什么用","children":[]},{"level":3,"title":"为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"为什么重写-equals-时必须重写-hashcode-方法","link":"#为什么重写-equals-时必须重写-hashcode-方法","children":[]},{"level":3,"title":"将数据添加到HashMap会经历哪些过程","slug":"将数据添加到hashmap会经历哪些过程","link":"#将数据添加到hashmap会经历哪些过程","children":[]},{"level":3,"title":"Java中的 HashMap 在根据key查找数据时要经历哪些过程","slug":"java中的-hashmap-在根据key查找数据时要经历哪些过程","link":"#java中的-hashmap-在根据key查找数据时要经历哪些过程","children":[]},{"level":3,"title":"String、StringBuffer、StringBuilder 的区别？","slug":"string、stringbuffer、stringbuilder-的区别","link":"#string、stringbuffer、stringbuilder-的区别","children":[]},{"level":3,"title":"String为什么是不可变的?","slug":"string为什么是不可变的","link":"#string为什么是不可变的","children":[]},{"level":3,"title":"字符串拼接用“+” 还是 StringBuilder?","slug":"字符串拼接用-还是-stringbuilder","link":"#字符串拼接用-还是-stringbuilder","children":[]},{"level":3,"title":"字符串常量池的作用了解吗？","slug":"字符串常量池的作用了解吗","link":"#字符串常量池的作用了解吗","children":[]},{"level":3,"title":"String s1 = new String(\\"abc\\");这句话创建了几个字符串对象？","slug":"string-s1-new-string-abc-这句话创建了几个字符串对象","link":"#string-s1-new-string-abc-这句话创建了几个字符串对象","children":[]},{"level":3,"title":"intern 方法有什么作用?","slug":"intern-方法有什么作用","link":"#intern-方法有什么作用","children":[]},{"level":3,"title":"String 类型的变量和常量做“+”运算时发生了什么？","slug":"string-类型的变量和常量做-运算时发生了什么","link":"#string-类型的变量和常量做-运算时发生了什么","children":[]}],"git":{"createdTime":1680761749000,"updatedTime":1680761749000,"contributors":[{"name":"王天赐","email":"15565946702@163.com","commits":1}]},"readingTime":{"minutes":31.87,"words":9562},"filePathRelative":"java/interview/JavaBase02.md","localizedDate":"2023年2月24日","excerpt":"<h3> 面向对象和面向过程的区别</h3>\\n<p>两者的主要区别在于解决问题的方式不同</p>\\n<ul>\\n<li>面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。</li>\\n<li>面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。</li>\\n</ul>\\n<p>另外，面向对象开发的程序一般更易维护、易复用、易扩展。</p>\\n<h3> 创建一个对象用什么运算符?对象实体与对象引用有何不同?</h3>\\n<p>new 运算符，new 创建对象实例（对象实例在堆内存中），对象引用指向对象实例（对象引用存放在栈内存中）。</p>\\n<p>一个对象引用可以指向 0 个或 1 个对象（一根绳子可以不系气球，也可以系一个气球）;一个对象可以有 n 个引用指向它（可以用 n 条绳子系住一个气球）。</p>","autoDesc":true}');export{e as data};
